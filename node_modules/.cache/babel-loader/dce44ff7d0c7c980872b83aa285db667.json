{"ast":null,"code":"var _jsxFileName = \"/home/shishir/IdeaProjects/react-lesson/aarogya-react/src/pages/patients/PatientsDataTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport Datatable from '../../components/datatable/Datatable';\nimport { rows, columns } from '../../datatablesource.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tableHeaders = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 70\n}, {\n  field: 'firstName',\n  headerName: 'First name',\n  width: 130\n}, {\n  field: 'lastName',\n  headerName: 'Last name',\n  width: 130\n}, {\n  field: 'age',\n  headerName: 'Age',\n  type: 'number',\n  width: 90\n}, {\n  field: 'fullName',\n  headerName: 'Full name',\n  description: 'This column has a value getter and is not sortable.',\n  sortable: false,\n  width: 160,\n  renderCell: params => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: params.row.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: params.row.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  }\n}];\n\nconst PatientsDataTable = () => {\n  _s();\n\n  const [patients, setPatients] = useState([]);\n\n  const getPatients = async () => {\n    try {\n      const response = rows;\n      setPatients(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const headers = columns;\n  useEffect(() => {\n    getPatients();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patientDataTable\",\n    children: /*#__PURE__*/_jsxDEV(Datatable, {\n      columns: headers,\n      rows: patients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PatientsDataTable, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n\n_c = PatientsDataTable;\nexport default PatientsDataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientsDataTable\");","map":{"version":3,"names":["React","useState","useEffect","Datatable","rows","columns","tableHeaders","field","headerName","width","type","description","sortable","renderCell","params","row","firstName","lastName","PatientsDataTable","patients","setPatients","getPatients","response","error","console","log","headers"],"sources":["/home/shishir/IdeaProjects/react-lesson/aarogya-react/src/pages/patients/PatientsDataTable.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useEffect } from 'react';\nimport Datatable from '../../components/datatable/Datatable'\n\nimport { rows, columns } from '../../datatablesource.js'\n\nconst tableHeaders = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'firstName', headerName: 'First name', width: 130 },\n    { field: 'lastName', headerName: 'Last name', width: 130 },\n    {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      renderCell:(params)=>{\n          return (\n              <>\n              <span>{params.row.firstName}</span>\n              <span>{params.row.lastName}</span>\n              </>\n          )\n      }\n    }\n];\n\nconst PatientsDataTable = () => {\n    const [patients, setPatients] = useState([]);\n\n    const getPatients = async () => {\n        try { \n            const response = rows;\n            setPatients(response);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const headers = columns;\n\n    useEffect(()=>{\n        getPatients()\n    },[]);\n\n    return (\n        <div className='patientDataTable'>\n            <Datatable columns={headers} rows={patients}/>\n        </div>\n    )\n}\n\nexport default PatientsDataTable"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AAEA,SAASC,IAAT,EAAeC,OAAf,QAA8B,0BAA9B;;;AAEA,MAAMC,YAAY,GAAG,CACjB;EAAEC,KAAK,EAAE,IAAT;EAAeC,UAAU,EAAE,IAA3B;EAAiCC,KAAK,EAAE;AAAxC,CADiB,EAEjB;EAAEF,KAAK,EAAE,WAAT;EAAsBC,UAAU,EAAE,YAAlC;EAAgDC,KAAK,EAAE;AAAvD,CAFiB,EAGjB;EAAEF,KAAK,EAAE,UAAT;EAAqBC,UAAU,EAAE,WAAjC;EAA8CC,KAAK,EAAE;AAArD,CAHiB,EAIjB;EACEF,KAAK,EAAE,KADT;EAEEC,UAAU,EAAE,KAFd;EAGEE,IAAI,EAAE,QAHR;EAIED,KAAK,EAAE;AAJT,CAJiB,EAUjB;EACEF,KAAK,EAAE,UADT;EAEEC,UAAU,EAAE,WAFd;EAGEG,WAAW,EAAE,qDAHf;EAIEC,QAAQ,EAAE,KAJZ;EAKEH,KAAK,EAAE,GALT;EAMEI,UAAU,EAAEC,MAAD,IAAU;IACjB,oBACI;MAAA,wBACA;QAAA,UAAOA,MAAM,CAACC,GAAP,CAAWC;MAAlB;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAA,UAAOF,MAAM,CAACC,GAAP,CAAWE;MAAlB;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA,gBADJ;EAMH;AAbH,CAViB,CAArB;;AA2BA,MAAMC,iBAAiB,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMoB,WAAW,GAAG,YAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAGlB,IAAjB;MACAgB,WAAW,CAACE,QAAD,CAAX;IACH,CAHD,CAGE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH;EACJ,CAPD;;EASA,MAAMG,OAAO,GAAGrB,OAAhB;EAEAH,SAAS,CAAC,MAAI;IACVmB,WAAW;EACd,CAFQ,EAEP,EAFO,CAAT;EAIA,oBACI;IAAK,SAAS,EAAC,kBAAf;IAAA,uBACI,QAAC,SAAD;MAAW,OAAO,EAAEK,OAApB;MAA6B,IAAI,EAAEP;IAAnC;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAvBD;;GAAMD,iB;;KAAAA,iB;AAyBN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}