{"ast":null,"code":"var _jsxFileName = \"/home/shishir/IdeaProjects/react-lesson/aarogya-react/src/pages/patients/PatientsDataTable.jsx\",\n    _s = $RefreshSig$();\n\nimport { width } from '@mui/system';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport Datatable from '../../components/datatable/Datatable';\nimport { rows, columns } from '../../datatablesource.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tableHeaders = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 70\n}, {\n  field: 'name',\n  headerName: 'Full name',\n  width: 130\n}, {\n  field: 'phone',\n  headerName: 'Phone',\n  width: 130\n}, {\n  field: 'email',\n  headerName: 'Email',\n  type: 'email',\n  sortable: false,\n  width: 90\n}, {\n  field: 'gender',\n  headerName: 'Gender',\n  width: 90\n}, {\n  field: 'address',\n  headerName: 'Address',\n  width: 130\n}, {\n  field: 'bloodGroup',\n  headerName: 'Blood Group',\n  width: 130\n}, {\n  field: 'dob',\n  headerName: 'Date Of Birth',\n  width: 130\n}];\n\nconst PatientsDataTable = () => {\n  _s();\n\n  const [patients, setPatients] = useState([]);\n\n  const getPatients = async () => {\n    try {\n      const response = axios.get('https://jsonplaceholder.typicode.com/posts');\n      setPatients(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getPatients();\n  }, []);\n  console.log(patients);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patientDataTable\",\n    children: /*#__PURE__*/_jsxDEV(Datatable, {\n      columns: tableHeaders,\n      rows: patients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PatientsDataTable, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n\n_c = PatientsDataTable;\nexport default PatientsDataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientsDataTable\");","map":{"version":3,"names":["width","React","useState","useEffect","Datatable","rows","columns","axios","tableHeaders","field","headerName","type","sortable","PatientsDataTable","patients","setPatients","getPatients","response","get","data","error","console","log"],"sources":["/home/shishir/IdeaProjects/react-lesson/aarogya-react/src/pages/patients/PatientsDataTable.jsx"],"sourcesContent":["import { width } from '@mui/system';\nimport React, { useState } from 'react'\nimport { useEffect } from 'react';\nimport Datatable from '../../components/datatable/Datatable'\n\nimport { rows, columns } from '../../datatablesource.js'\nimport axios from 'axios'\n\nconst tableHeaders = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'name', headerName: 'Full name', width: 130 },\n    { field: 'phone', headerName: 'Phone', width: 130 },\n    {\n        field: 'email',\n        headerName: 'Email',\n        type: 'email',\n        sortable: false,\n        width: 90,\n    },\n    {\n        field: 'gender',\n        headerName: 'Gender',\n        width: 90\n    },\n    {\n        field: 'address',\n        headerName: 'Address',\n        width: 130\n    },\n    {\n        field: 'bloodGroup',\n        headerName: 'Blood Group',\n        width: 130\n    },\n    {\n        field: 'dob',\n        headerName: 'Date Of Birth',\n        width: 130\n    }\n];\n\nconst PatientsDataTable = () => {\n    const [patients, setPatients] = useState([]);\n\n    const getPatients = async () => {\n        try {\n            const response = axios.get('https://jsonplaceholder.typicode.com/posts');\n            setPatients(response.data);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getPatients()\n    }, []);\n\n    console.log(patients);\n    return (\n        <div className='patientDataTable'>\n            <Datatable columns={tableHeaders} rows={patients} />\n        </div>\n    )\n}\n\nexport default PatientsDataTable"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AAEA,SAASC,IAAT,EAAeC,OAAf,QAA8B,0BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CACjB;EAAEC,KAAK,EAAE,IAAT;EAAeC,UAAU,EAAE,IAA3B;EAAiCV,KAAK,EAAE;AAAxC,CADiB,EAEjB;EAAES,KAAK,EAAE,MAAT;EAAiBC,UAAU,EAAE,WAA7B;EAA0CV,KAAK,EAAE;AAAjD,CAFiB,EAGjB;EAAES,KAAK,EAAE,OAAT;EAAkBC,UAAU,EAAE,OAA9B;EAAuCV,KAAK,EAAE;AAA9C,CAHiB,EAIjB;EACIS,KAAK,EAAE,OADX;EAEIC,UAAU,EAAE,OAFhB;EAGIC,IAAI,EAAE,OAHV;EAIIC,QAAQ,EAAE,KAJd;EAKIZ,KAAK,EAAE;AALX,CAJiB,EAWjB;EACIS,KAAK,EAAE,QADX;EAEIC,UAAU,EAAE,QAFhB;EAGIV,KAAK,EAAE;AAHX,CAXiB,EAgBjB;EACIS,KAAK,EAAE,SADX;EAEIC,UAAU,EAAE,SAFhB;EAGIV,KAAK,EAAE;AAHX,CAhBiB,EAqBjB;EACIS,KAAK,EAAE,YADX;EAEIC,UAAU,EAAE,aAFhB;EAGIV,KAAK,EAAE;AAHX,CArBiB,EA0BjB;EACIS,KAAK,EAAE,KADX;EAEIC,UAAU,EAAE,eAFhB;EAGIV,KAAK,EAAE;AAHX,CA1BiB,CAArB;;AAiCA,MAAMa,iBAAiB,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMc,WAAW,GAAG,YAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAGV,KAAK,CAACW,GAAN,CAAU,4CAAV,CAAjB;MACAH,WAAW,CAACE,QAAQ,CAACE,IAAV,CAAX;IACH,CAHD,CAGE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH;EACJ,CAPD;;EASAjB,SAAS,CAAC,MAAM;IACZa,WAAW;EACd,CAFQ,EAEN,EAFM,CAAT;EAIAK,OAAO,CAACC,GAAR,CAAYR,QAAZ;EACA,oBACI;IAAK,SAAS,EAAC,kBAAf;IAAA,uBACI,QAAC,SAAD;MAAW,OAAO,EAAEN,YAApB;MAAkC,IAAI,EAAEM;IAAxC;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAtBD;;GAAMD,iB;;KAAAA,iB;AAwBN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}